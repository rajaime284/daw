
package tpvhostGenTpvhostRESTAzure.uiModels.DTOA;

import tpvhostGenTpvhostRESTAzure.uiModels.DTO.*;
import tpvhostGenTpvhostRESTAzure.uiModels.DTO.utils.*;
import tpvhostGenTpvhostRESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class CompraProveedorDTOA extends DTOA
{
	// region - Members, getters and setters

	
	private Double saldo;
	public Double getSaldo () { return saldo; }
	public void setSaldo (Double saldo) { this.saldo = saldo; }
	
	private EstadoCompraProveedor estadoCompra;
	public EstadoCompraProveedor getEstadoCompra () { return estadoCompra; }
	public void setEstadoCompra (EstadoCompraProveedor estadoCompra) { this.estadoCompra = estadoCompra; }
	
	private java.util.Date fecha;
	public java.util.Date getFecha () { return fecha; }
	public void setFecha (java.util.Date fecha) { this.fecha = fecha; }
	
	private Double total;
	public Double getTotal () { return total; }
	public void setTotal (Double total) { this.total = total; }
	
	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }
	
	
	/* Rol: CompraProveedor o--> LineaCompraProveedor */
	private ArrayList<LineaCompraProveedorDTOA> lineasCompraProveedor;
	public ArrayList<LineaCompraProveedorDTOA> getLineasCompraProveedor () { return lineasCompraProveedor; }
	public void setLineasCompraProveedor (ArrayList<LineaCompraProveedorDTOA> lineasCompraProveedor) { this.lineasCompraProveedor = lineasCompraProveedor; }

	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public CompraProveedorDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			

			if (!JSONObject.NULL.equals(json.opt("Saldo")))
			{
			 
			 	String stringDouble = String.valueOf(json.opt("Saldo"));
 				this.saldo = Double.parseDouble(stringDouble);
			 
			}

			if (!JSONObject.NULL.equals(json.opt("EstadoCompra")))
			{
				int enumRawValue = (int) json.opt("EstadoCompra");
				this.estadoCompra = EstadoCompraProveedor.fromRawValue(enumRawValue);
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Fecha")))
			{
			 
			 	String stringDate = (String) json.opt("Fecha");
				this.fecha = DateUtils.stringToDateFormat(stringDate);
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Total")))
			{
			 
			 	String stringDouble = String.valueOf(json.opt("Total"));
 				this.total = Double.parseDouble(stringDouble);
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
			 
				this.id = (Integer) json.opt("Id");
			 
			}
			

			JSONArray arrayLineasCompraProveedor = json.optJSONArray("LineasCompraProveedor");
			if (arrayLineasCompraProveedor != null)
			{
				this.lineasCompraProveedor = new ArrayList<LineaCompraProveedorDTOA>();
				for (int i = 0; i < arrayLineasCompraProveedor.length(); ++i)
				{
					JSONObject subJson = (JSONObject) arrayLineasCompraProveedor.opt(i);
					LineaCompraProveedorDTOA tmp = new LineaCompraProveedorDTOA();
					tmp.setFromJSON(subJson);
					this.lineasCompraProveedor.add(tmp);
				}
			}

			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			
		
		  if (this.saldo != null)
			json.put("Saldo", this.saldo);
		
		
		  if (this.estadoCompra != null)
			json.put("EstadoCompra", this.estadoCompra.getRawValue());
		
		
		  if (this.fecha != null)
			json.put("Fecha", DateUtils.dateToFormatString(this.fecha));
		
		
		  if (this.total != null)
			json.put("Total", this.total);
		
		
		  if (this.id != null)
			json.put("Id", this.id.intValue());
		
			

			if (this.lineasCompraProveedor != null)
			{
				JSONArray jsonArray = new JSONArray();
				for (int i = 0; i < this.lineasCompraProveedor.size(); ++i)
				{
					jsonArray.put(this.lineasCompraProveedor.get(i).toJSON());
				}
				json.put("LineasCompraProveedor", jsonArray);
			}

			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		CompraProveedorDTO dto = new CompraProveedorDTO ();
		
		// Attributes
		
		
	dto.setSaldo (this.getSaldo());

	dto.setEstadoCompra (this.getEstadoCompra());

	dto.setFecha (this.getFecha());

	dto.setTotal (this.getTotal());

	dto.setId (this.getId());

		
		
		// Roles
					// TODO: from DTOA [ LineasCompraProveedor ] (dataType : ArrayList<LineaCompraProveedorDTOA>) to DTO [ LineaCompraProveedor ]
		
		
		return dto;
	}

	// endregion
}

	