{"remainingRequest":"C:\\Users\\Andy\\Desktop\\Master\\2º\\DAW\\Proyecto\\daw\\taller-fe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Andy\\Desktop\\Master\\2º\\DAW\\Proyecto\\daw\\taller-fe\\src\\components\\Mislistas.vue?vue&type=style&index=0&id=cbb07a32&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Andy\\Desktop\\Master\\2º\\DAW\\Proyecto\\daw\\taller-fe\\src\\components\\Mislistas.vue","mtime":1652872202993},{"path":"C:\\Users\\Andy\\Desktop\\Master\\2º\\DAW\\Proyecto\\daw\\taller-fe\\node_modules\\css-loader\\dist\\cjs.js","mtime":1652867794651},{"path":"C:\\Users\\Andy\\Desktop\\Master\\2º\\DAW\\Proyecto\\daw\\taller-fe\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1652867801372},{"path":"C:\\Users\\Andy\\Desktop\\Master\\2º\\DAW\\Proyecto\\daw\\taller-fe\\node_modules\\postcss-loader\\src\\index.js","mtime":1652867798138},{"path":"C:\\Users\\Andy\\Desktop\\Master\\2º\\DAW\\Proyecto\\daw\\taller-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652867793358},{"path":"C:\\Users\\Andy\\Desktop\\Master\\2º\\DAW\\Proyecto\\daw\\taller-fe\\node_modules\\vue-loader\\lib\\index.js","mtime":1652867801372}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi50aXR1bG9MaXN0YSB7IGZvbnQtc2l6ZTogMmVtO30NCg=="},{"version":3,"sources":["Mislistas.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA","file":"Mislistas.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n   <div>\r\n      <h1>{{ titulo }}</h1>\r\n      <button v-if=\"mode!='add'\" v-on:click=\"addMode()\" class=\"btn btn-primary\">\r\n         {{$t('add.btnNewItem')}}\r\n      </button>\r\n\r\n      <div class=\"alert alert-danger\" v-if=\"errGet!=''\">Error: {{errGet}}</div>\r\n      \r\n      <div class=\"container\" v-if=\"errGet=='' && mode=='list'\">\r\n         <fieldset>\r\n            <legend>{{$t('productos.titulo')}}</legend>\r\n            <template v-for=\"(list) in getAll()\">\r\n               <div class=\"card\" v-bind:key=\"list.id\" v-if=\"true\"\r\n               v-bind:style=\"{ 'background-color': list.color}\">\r\n                  <div class=\"card-body\">\r\n                     test\r\n                  </div>\r\n               </div>\r\n            </template>\r\n            <div v-if=\"getCount()==0\" class=\"alert alert-warning\">\r\n               {{$t('productos.noItems')}}\r\n            </div>\r\n         </fieldset>\r\n      </div>\r\n\r\n      <div class=\"container\" v-if=\"errGet=='' && mode=='add'\">\r\n         <fieldset>\r\n            <legend>{{$t('add.titulo')}}</legend>\r\n            <form>\r\n               <div class=\"form-group\">\r\n                  <label for=\"addListNombre\">{{$t('add.lblNombre')}}</label>\r\n                  <input ref=\"newList_nombre\" v-model=\"newList.nombre\" type=\"text\" \r\n                  class=\"form-control\" id=\"addListNombre\" \r\n                  v-bind:placeholder=\"$t('add.ttpNombre')\">\r\n                  <span v-if=\"errList.nombre\" class=\"small text-danger\">\r\n                        {{$t('add.errNombre')}}\r\n                  </span>\r\n               </div>\r\n               <div class=\"form-group\">\r\n                  <label for=\"addListColor\"> {{$t('add.lblColor')}}</label>\r\n                  <input v-model=\"newList.color\" type=\"color\" class=\"form-control\" \r\n                  id=\"addListColor\">\r\n               </div>  \r\n            </form>\r\n            <div class=\"btn-group\">\r\n               <button v-on:click=\"addList()\" class=\"btn btn-primary\">\r\n                  {{$t('add.btnCreate')}}\r\n               </button>\r\n               <button v-on:click=\"listMode()\" class=\"btn btn-danger\">\r\n                  {{$t('app.btnAtras')}}\r\n               </button>\r\n            </div> \r\n            <div class=\"alert alert-danger\" v-if=\"errAdd!=''\">Error: {{errAdd}}</div>\r\n         </fieldset>\r\n      </div>\r\n   </div>\r\n</template>\r\n\r\n<style scoped>\r\n.tituloLista { font-size: 2em;}\r\n</style>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport TaskList from '@/models/TaskList';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n   filters: {\r\n      formatDate: function (value: any) {\r\n         //TODO, verificar que hay algo en value!\r\n         let aux = moment(value);\r\n         return aux.format(\"DD/MM/YYYY hh:mm:ss\");\r\n      }\r\n   }\r\n})\r\n\r\nexport default class Mislistas extends Vue {\r\n   $refs!: {\r\n    newList_nombre: HTMLFormElement\r\n  }\r\n   @Prop() private titulo!: string;\r\n   mode=\"list\";\r\n   //VUEX: lists:TaskList[]=[];\r\n   newList:TaskList=new TaskList();\r\n   errList= {nombre: false};\r\n   slctVisible='T';\r\n   errGet=\"\";\r\n   errAdd=\"\";\r\n   mounted() {\r\n      this.$store.dispatch(\"getProductos\");//Aqui se llama al metodo del api\r\n      this.errGet=\"\";\r\n      if (this.hayError()) {\r\n         this.errGet = this.getError();\r\n      }\r\n   }\r\n   hayError() {\r\n      return this.$store.getters.getError!=\"\"; \r\n   }\r\n   getError() {\r\n      return this.$store.getters.getError;\r\n   }\r\n   getAll() {\r\n      return this.$store.getters.getAll;\r\n   }\r\n   getCount() {\r\n      return this.$store.getters.getCount;\r\n   }\r\n   addMode():void {\r\n      //VUEX: let nextId= this.lists.length>0?this.lists[this.lists.length-1].id+1:+1;\r\n      //API: let nextId= this.$store.getters.getNextId;\r\n      this.newList = new TaskList();\r\n      //API: this.newList.id= nextId;\r\n      this.mode=\"add\";\r\n      this.errList.nombre=false;\r\n   }\r\n   listMode():void {\r\n      this.mode=\"list\";\r\n   }\r\n   addList():void {\r\n      if (this.newList.nombre != \"\") {\r\n         this.newList.fecha = moment();\r\n\t\t\t//VUEX: this.lists.push(this.newList);\r\n         //API: this.$store.commit('add', this.newList);\r\n         this.$store.dispatch(\"addList\", this.newList);\r\n         this.errAdd=\"\";\r\n         if (this.hayError()) {\r\n            this.errAdd = this.getError();\r\n         } else {\r\n            this.mode = 'list';\r\n         }\r\n\t\t} else {\r\n\t\t\tthis.errList.nombre = true;\r\n\t\t\tthis.$refs.newList_nombre.focus();\r\n\t\t}\r\n   }\r\n   deleteList(list:number) {\r\n      //VUEX: this.lists.splice(list, 1);\r\n      this.$store.commit('del', list);\r\n   }\r\n}\r\n</script>\r\n\r\n\r\n"]}]}