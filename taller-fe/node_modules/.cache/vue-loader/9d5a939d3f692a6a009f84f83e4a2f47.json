{"remainingRequest":"D:\\Master\\Clases Máster\\DAW\\Proyecto\\TallerVue\\taller-fe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Master\\Clases Máster\\DAW\\Proyecto\\TallerVue\\taller-fe\\src\\components\\Mislistas.vue?vue&type=style&index=0&id=cbb07a32&scoped=true&lang=css&","dependencies":[{"path":"D:\\Master\\Clases Máster\\DAW\\Proyecto\\TallerVue\\taller-fe\\src\\components\\Mislistas.vue","mtime":1652834377983},{"path":"D:\\Master\\Clases Máster\\DAW\\Proyecto\\TallerVue\\taller-fe\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Master\\Clases Máster\\DAW\\Proyecto\\TallerVue\\taller-fe\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Master\\Clases Máster\\DAW\\Proyecto\\TallerVue\\taller-fe\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Master\\Clases Máster\\DAW\\Proyecto\\TallerVue\\taller-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Master\\Clases Máster\\DAW\\Proyecto\\TallerVue\\taller-fe\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50aXR1bG9MaXN0YSB7IGZvbnQtc2l6ZTogMmVtO30K"},{"version":3,"sources":["Mislistas.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA","file":"Mislistas.vue","sourceRoot":"src/components","sourcesContent":["<template>\n   <div>\n      <div>\n  <b-navbar toggleable=\"lg\" type=\"dark\" variant=\"info\">\n    <b-navbar-brand href=\"#\">NavBar</b-navbar-brand>\n\n    <b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\n\n    <b-collapse id=\"nav-collapse\" is-nav>\n      <b-navbar-nav>\n        <b-nav-item href=\"#\">Link</b-nav-item>\n        <b-nav-item href=\"#\" disabled>Disabled</b-nav-item>\n      </b-navbar-nav>\n\n      <!-- Right aligned nav items -->\n      <b-navbar-nav class=\"ml-auto\">\n        <b-nav-form>\n          <b-form-input size=\"sm\" class=\"mr-sm-2\" placeholder=\"Search\"></b-form-input>\n          <b-button size=\"sm\" class=\"my-2 my-sm-0\" type=\"submit\">Search</b-button>\n        </b-nav-form>\n\n        <b-nav-item-dropdown text=\"Lang\" right>\n          <b-dropdown-item href=\"#\">EN</b-dropdown-item>\n          <b-dropdown-item href=\"#\">ES</b-dropdown-item>\n          <b-dropdown-item href=\"#\">RU</b-dropdown-item>\n          <b-dropdown-item href=\"#\">FA</b-dropdown-item>\n        </b-nav-item-dropdown>\n\n        <b-nav-item-dropdown right>\n          <!-- Using 'button-content' slot -->\n          <template #button-content>\n            <em>User</em>\n          </template>\n          <b-dropdown-item href=\"#\">Profile</b-dropdown-item>\n          <b-dropdown-item href=\"#\">Sign Out</b-dropdown-item>\n        </b-nav-item-dropdown>\n      </b-navbar-nav>\n    </b-collapse>\n  </b-navbar>\n</div>\n      <!--\n      <h1>{{ titulo }}</h1>\n      <button v-if=\"mode!='add'\" v-on:click=\"addMode()\" class=\"btn btn-primary\">\n         {{$t('add.btnAdd')}}\n      </button>\n\n      <div class=\"alert alert-danger\" v-if=\"errGet!=''\">Error: {{errGet}}</div>\n      \n      <div class=\"container\" v-if=\"errGet=='' && mode=='list'\">\n         <fieldset>\n            <legend>{{$t('list.titulo')}}</legend>\n            <div class=\"row justify-content-end\">\n               <select class=\"form-control col-md-3\" v-model=\"slctVisible\">\n                  <option value=\"T\">{{$t('list.optTodas')}}</option>\n                  <option value=\"V\">{{$t('list.optVisibles')}}</option>\n                  <option value=\"N\">{{$t('list.optNOVisibles')}}</option>\n               </select>\n            </div>\n            <template v-for=\"(list, index) in getAll()\">\n               <div class=\"card\" v-bind:key=\"list.id\" v-if=\"getVisibility(index)\"\n               v-bind:style=\"{ 'background-color': list.color}\">\n                  <div class=\"card-body\">\n                     <div class=\"tituloLista\">\n                        {{list.nombre}}\n                        <div class=\"btn-group\">\n                           <button v-on:click=\"deleteList(index)\" \n                           class=\"btn btn-sm btn-danger\" \n                           v-bind:title=\"$t('delete.ttpBtn')\">\n                              <font-awesome-icon icon=\"trash\"></font-awesome-icon>\n                           </button>\n                           <button v-if=\"list.visible==true\"  v-on:click=\"visibleList(index)\" \n                           class=\"btn btn-sm btn-info\" v-bind:title=\"$t('list.ttpNoVisible')\">\n                              <font-awesome-icon icon=\"eye-slash\"></font-awesome-icon>\n                           </button>\n                           <button v-if=\"list.visible==false\" v-on:click=\"visibleList(index)\" \n                           class=\"btn btn-sm btn-info\" v-bind:title=\"$t('list.ttpVisible')\">\n                              <font-awesome-icon icon=\"eye\"></font-awesome-icon>\n                           </button>\n                        </div>\n                     </div>\n                     <small>{{list.fecha | formatDate}}</small>\n                  </div>\n               </div>\n            </template>\n            <div v-if=\"getCount()==0\" class=\"alert alert-warning\">\n               {{$t('list.noLists')}}\n            </div>\n         </fieldset>\n      </div>\n\n      <div class=\"container\" v-if=\"errGet=='' && mode=='add'\">\n         <fieldset>\n            <legend>{{$t('add.titulo')}}</legend>\n            <form>\n               <div class=\"form-group\">\n                  <label for=\"addListNombre\">{{$t('add.lblNombre')}}</label>\n                  <input ref=\"newList_nombre\" v-model=\"newList.nombre\" type=\"text\" \n                  class=\"form-control\" id=\"addListNombre\" \n                  v-bind:placeholder=\"$t('add.ttpNombre')\">\n                  <span v-if=\"errList.nombre\" class=\"small text-danger\">\n                        {{$t('add.errNombre')}}\n                  </span>\n               </div>\n               <div class=\"form-group\">\n                  <label for=\"addListColor\"> {{$t('add.lblColor')}}</label>\n                  <input v-model=\"newList.color\" type=\"color\" class=\"form-control\" \n                  id=\"addListColor\">\n               </div>  \n            </form>\n            <div class=\"btn-group\">\n               <button v-on:click=\"addList()\" class=\"btn btn-primary\">\n                  {{$t('add.btnAddList')}}\n               </button>\n               <button v-on:click=\"listMode()\" class=\"btn btn-danger\">\n                  {{$t('app.btnAtras')}}\n               </button>\n            </div> \n            <div class=\"alert alert-danger\" v-if=\"errAdd!=''\">Error: {{errAdd}}</div>\n         </fieldset>\n      </div>-->\n   </div>\n</template>\n\n<style scoped>\n.tituloLista { font-size: 2em;}\n</style>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport TaskList from '@/models/TaskList';\nimport moment from 'moment';\n//import BootstrapVue from 'bootstrap-vue/dist/bootstrap-vue.esm';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n//Vue.use(BootstrapVue);\n\n@Component({\n   filters: {\n      formatDate: function (value: any) {\n         //TODO, verificar que hay algo en value!\n         let aux = moment(value);\n         return aux.format(\"DD/MM/YYYY hh:mm:ss\");\n      }\n   }\n})\n\nexport default class Mislistas extends Vue {\n   $refs!: {\n    newList_nombre: HTMLFormElement\n  }\n   @Prop() private titulo!: string;\n   mode=\"list\";\n   //VUEX: lists:TaskList[]=[];\n   newList:TaskList=new TaskList();\n   errList= {nombre: false};\n   slctVisible='T';\n   errGet=\"\";\n   errAdd=\"\";\n   mounted() {\n      this.$store.dispatch(\"getLists\");\n      this.errGet=\"\";\n      if (this.hayError()) {\n         this.errGet = this.getError();\n      }\n   }\n   hayError() {\n      return this.$store.getters.getError!=\"\"; \n   }\n   getError() {\n      return this.$store.getters.getError;\n   }\n   getAll() {\n      return this.$store.getters.getAll;\n   }\n   getCount() {\n      return this.$store.getters.getCount;\n   }\n   addMode():void {\n      //VUEX: let nextId= this.lists.length>0?this.lists[this.lists.length-1].id+1:+1;\n      //API: let nextId= this.$store.getters.getNextId;\n      this.newList = new TaskList();\n      //API: this.newList.id= nextId;\n      this.mode=\"add\";\n      this.errList.nombre=false;\n   }\n   listMode():void {\n      this.mode=\"list\";\n   }\n   addList():void {\n      if (this.newList.nombre != \"\") {\n         this.newList.fecha = moment();\n\t\t\t//VUEX: this.lists.push(this.newList);\n         //API: this.$store.commit('add', this.newList);\n         this.$store.dispatch(\"addList\", this.newList);\n         this.errAdd=\"\";\n         if (this.hayError()) {\n            this.errAdd = this.getError();\n         } else {\n            this.mode = 'list';\n         }\n\t\t} else {\n\t\t\tthis.errList.nombre = true;\n\t\t\tthis.$refs.newList_nombre.focus();\n\t\t}\n   }\n   deleteList(list:number) {\n      //VUEX: this.lists.splice(list, 1);\n      this.$store.commit('del', list);\n   }\n   visibleList(index:number) {\n      //VUEX: this.lists[index].visible = (this.lists[index].visible ? false : true);\n      this.$store.commit('setVisible', index);\n   }\n   getVisibility(index:number) {\n      let res = true;\n      switch (this.slctVisible) {\n         case \"V\":\n            //VUEX: res = this.lists[index].visible;\n            res = this.$store.getters.getVisible(index);\n            break;\n         case \"N\":\n            //VUEX: res = !this.lists[index].visible;\n            res = !this.$store.getters.getVisible(index);\n            break;\n         default:\n            res = true;\n            break;\n      }\n      return res;\n   }\n}\n</script>\n\n\n"]}]}